Story about funnel plot 

https://www.theguardian.com/commentisfree/2011/oct/28/bad-science-diy-data-analysis

This atricle from "thegaurdian" tells us the inspiring story about how using wrong visualization tools can 
trigger wrong conclusions even by such a serious news publisher as BBC. The real "hero" of this story is "funnel plot". 
Which can be used for comparing institutional performance and medical data analysis.  

[img1] 
 
The funnel plot is easy to consume and interpret. The "funnel" is formed by confidence limits and show the amount of expected variation. 
The dots outside the funnel are outliers.

In this blog author demonstrates the implementation of "funnel plot" in R, and we use it as starting point  
https://onlinejournalismblog.com/2011/10/31/power-tools-for-aspiring-data-journalists-funnel-plots-in-r/

We are going to use this code in order to incrementally create 
1) R-script for RStudio
2) R-visual in Power BI
3) R-powered Custom Visual in Power BI
4) R-powered HTML-based Custom Visual in Power BI


Chapter 1

The minimal R-script and the accompanying data table: 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter1_R\ver_00\dataset.csv
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter1_R\ver_00\script_R_v1_00.r

The next version of R-script is essentially the same, but implements input errors handling and user parametes to control the appearance of the plot 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter1_R\ver_01\dataset.csv
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter1_R\ver_01\script_R_v1_01.r


Chapter 2

Let us load the "dataset.csv" into Power BI desktop workspace as "Cancer Mortality" table. 
The code in "script_R_v1_01.r" is almost ready to be used within R-visual. 
We only need to comment out the "read.csv" call. 

The R-code is: 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter2_Rvisual\script_RV_v2_00.r

See the result in: 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter2_Rvisual\funnelPlot_Rvisual.pbix


Remark: The "dataset" is hard-coded name for R-visual and we took care about it already in Chapter 1. 


Chapter 3

We are about to package R code in R-powered Custom Visual. 
Before you can get started you'll need to install the PBIVIZ tools. This should only take a few seconds.
https://github.com/Microsoft/PowerBI-visuals/blob/master/tools/README.md#installation

Section 3.1
Now use any command line shell to create new R-powered custom visual

> pbiviz new funnelRvisual -t rvisual
> cd funnelRvisual
> npm install 
> pbiviz package

It will create funnelRvisual folder with initial basic visual. 
The PBIVIZ is in "dist" folder. Try to import it in PBIX and see what it does.   

* Open "script.r" file for editing and copy the contents "script_RV_v2_00.r"  just as is !!!
* Open "capabilities.json" in any editor and Find/Replace the "Values" string by "dataset" string. It replaces the name of "Role" in template to be like in R-code. 
* Open "dependencies.json" in any editor and add one section for each R-package required in R-script (if you want to support automatic import of packages, while visual is added first time)

Now re-package the visual again: 
> pbiviz package

Try to import it in PBIX again and see what it does.  
The resulting PBIX and the whole Custom Visual Project may be found in  

c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v01\


Section 3.2

The Custom Visual in previous section is good to go, but it is not really user-friendly. 
Let us divide the input field "dataset" into 3 parts: Population, Number and Tooltips. 

* Edit "capabilities.json" by replacing "dataset" role by three new roles.
The resulting  file is 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v02\capabilities.json 

* Edit "script.r" to support "Population", "Number" and "Tooltips" as input dataframes instead of "dataset"

The resulting  file is 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v02\script.r 

To follow the changes in R-script, search for the blocks: 

#RVIZ_IN_PBI_GUIDE:BEGIN:Added to enable custom visual fields   
 ...
#RVIZ_IN_PBI_GUIDE:END:Added to enable custom visual fields
 
and 

#RVIZ_IN_PBI_GUIDE:BEGIN:Removed to enable custom visual fields   
 ...
#RVIZ_IN_PBI_GUIDE:END:Removed to enable custom visual fields

Now re-package the visual again: 
> pbiviz package

Try to import it in PBIX again and see what it does.  
The resulting PBIX and the whole Custom Visual Project may be found in  

c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v02\

Section 3.3

The Custom Visual in previous section is almost perfect, but something is still missing. What is it? 
Of cause, user parameters. We want user to control colors and sizes from UI. 

* We need to edit "capabilities.json" again, this time the "objects" section. This is the place to define names, tooltips and types of each parameter. 
As well we decide on partition of parameters into groups.  You may decide not to expose some of the parameters to UI, like we did. 
 
The resulting  file is 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v03\capabilities.json 

* Edit "script.r" to support the parameters in UI, it is quite easy just by adding "if.exists" calls per user-parameter

The resulting  file is 
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v03\script.r 

To follow the changes in R-script, search for the blocks: 

#RVIZ_IN_PBI_GUIDE:BEGIN:Added to enable user parameters 
 ...
#RVIZ_IN_PBI_GUIDE:END:Added to enable user parameters 
 
and 

#RVIZ_IN_PBI_GUIDE:BEGIN:Added to enable user parameters 
 ...
#RVIZ_IN_PBI_GUIDE:END:Added to enable user parameters 

* Now edit "visual.ts" file, it is a typeScript code   

Now re-package the visual again: 
> pbiviz package

Try to import it in PBIX again and see what it does.  
The resulting PBIX and the whole Custom Visual Project may be found in  

c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\
c:\Users\boefraty\projects\PBI\R\Interactive\TutorialFunnelPlot\chapter3_RCustomVisual\funnelRvisual_v02\









